# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14dlL17nLzrETV2rCDtQz1bP5_FrUFWDS

### Front Face Try
"""

!pip install streamlit
!pip install openai
!pip install pandas

import streamlit as st
import openai
import pandas as pd

# --- CONFIG ---
st.set_page_config(page_title="Job Assistant", layout="centered")
openai.api_key = "YOUR_OPENAI_API_KEY"  # Replace with your key

# --- HEADER ---
st.title("ü§ñ Job Recommendation & Interview Assistant")

# --- RESUME UPLOAD ---
resume_file = st.file_uploader("Upload your resume (PDF or TXT):", type=["pdf", "txt"])

# --- JOB SELECTION ---
job_roles = ["Data Analyst", "Marketing Intern", "Software Developer", "Finance Associate"]
selected_role = st.selectbox("Select a job role you're applying for:", job_roles)

# --- RECOMMEND JOBS BUTTON ---
if st.button("üîç Recommend Jobs"):
    if resume_file:
        resume_text = resume_file.read().decode("utf-8") if resume_file.type == "text/plain" else "(Simulated PDF content)"

        prompt = f"Given this resume:\n{resume_text}\n\nSuggest job recommendations for the role of {selected_role}. Give a score of fit out of 100 and explain why."

        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )

        st.subheader("üîé Job Recommendation")
        st.write(response['choices'][0]['message']['content'])
    else:
        st.warning("Please upload your resume first.")

# --- DIGITAL INTERVIEW SECTION ---
st.markdown("---")
st.subheader("üé§ Digital Interview")
question = st.text_input("Ask a common interview question (or use: 'Tell me about yourself'):")

if st.button("üó£Ô∏è Generate Ideal Answer"):
    if resume_file:
        resume_text = resume_file.read().decode("utf-8") if resume_file.type == "text/plain" else "(Simulated PDF content)"

        prompt = f"Given the resume below, generate a strong answer to the interview question: '{question}'\n\nResume:\n{resume_text}"

        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )

        st.subheader("üí¨ Suggested Answer")
        st.write(response['choices'][0]['message']['content'])
    else:
        st.warning("Please upload your resume to personalize the answer.")

